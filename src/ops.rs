// Trinary results of the crazy operation depending
// on the last 2 trits of both operands
static CRZ_TABLE: [[u16; 9]; 9] = [
    [4, 3, 3, 1, 0, 0, 1, 0, 0],
    [4, 3, 5, 1, 0, 2, 1, 0, 2],
    [5, 5, 4, 2, 2, 1, 2, 2, 1],
    [4, 3, 3, 1, 0, 0, 7, 6, 6],
    [4, 3, 5, 1, 0, 2, 7, 6, 8],
    [5, 5, 4, 2, 2, 1, 8, 8, 7],
    [7, 6, 6, 7, 6, 6, 4, 3, 3],
    [7, 6, 8, 7, 6, 8, 4, 3, 5],
    [8, 8, 7, 8, 8, 7, 5, 5, 4],
];

static ENCRYPT_TABLE: [u16; 94] = [
     53, 122,  93,  38, 103, 113, 116, 121, 102, 114,
     36,  40, 119, 101,  52, 123,  87,  80,  41,  72,
     45,  90, 110,  44,  91,  37,  92,  51, 100,  76,
     43,  81,  59,  62,  85,  33, 112,  74,  83,  55,
     50,  70, 104,  79,  65,  49,  67,  66,  54, 118,
     94,  61,  73,  95,  48,  47,  56, 124, 106, 115,
     98,  57, 109,  60,  46,  84,  86,  97,  99,  96,
    117,  89,  42,  77,  75,  39,  88, 126, 120,  68,
    108, 125,  82,  69, 111, 107,  78,  58,  35,  63,
     71,  34, 105,  64
];

pub const fn incr(x: u16) -> u16 {
    if x == 59048 { 0 } else { x + 1 }
}

pub const fn rotate(x: u16) -> u16 {
    19683 * (x % 3) + x / 3
}

pub fn crazy(a: u16, b: u16) -> u16 {
    [1, 9, 81, 729, 6561].into_iter()
        .map(|pow| pow * CRZ_TABLE[(b / pow % 9) as usize][(a / pow % 9) as usize])
        .sum()
}

pub fn encrypt(x: u16) -> u16 {
    ENCRYPT_TABLE[x as usize - 33]
}
